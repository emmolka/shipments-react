{"ast":null,"code":"var _jsxFileName = \"/home/master/ProjectBootstrap/test_task/src/Menu.js\";\nimport React from \"react\";\nimport Shipment from \"./Shipment\";\nimport Charts from \"./Charts\";\nimport ShipmentCard from \"./ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./NewShipmentCard\";\nimport NewShipmentInput from \"./NewShipmentInput\";\n\nclass Menu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shipments: [],\n      //shipment name shouldbethere\n      openedShipmentId: \"\",\n      isNewShipmentOpen: false,\n      isShipmentOpen: false,\n      newShipmentId: \"\",\n      newShipmentName: \"\"\n    };\n\n    this.showShipment = e => {\n      if (this.state.openedShipmentId === e.id) {\n        this.setState({\n          isShipmentOpen: false,\n          openedShipmentId: \"\",\n          isNewShipmentOpen: false\n        });\n      } else {\n        this.setState({\n          openedShipmentId: e.id,\n          isShipmentOpen: true,\n          isNewShipmentOpen: false\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.showNewShipment = () => {\n      console.log(this.state.isNewShipmentOpen);\n\n      if (this.state.isShipmentOpen) {\n        this.setState({\n          isShipmentOpen: false,\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      } else {\n        this.state.isNewShipmentOpen ? this.setState({\n          isNewShipmentOpen: false\n        }) : this.setState({\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      }\n    };\n\n    this.addNewShipmentName = e => {\n      this.setState({\n        newShipmentName: e.target.value\n      });\n    };\n\n    this.addNewShipment = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/shipment\", {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addNewShipmentToState();\n        this.clearInput();\n        this.newId();\n      } catch (e) {\n        alert(\"Adding shipment failed\");\n        console.log(e);\n      }\n    };\n\n    this.addNewShipmentToState = () => {\n      const shipment = {\n        id: this.state.newShipmentId,\n        name: this.state.newShipmentName,\n        items: []\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.push(shipment);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        newShipmentName: \"\"\n      });\n    };\n\n    this.newId = () => {\n      const uuidv1 = require(\"uuid/v1\");\n\n      const numbers = uuidv1();\n      console.log(numbers);\n      this.setState({\n        newShipmentId: numbers\n      });\n      console.log(this.state);\n    };\n  }\n\n  async componentDidMount() {\n    this.newId();\n\n    try {\n      const data = await axios.get(\"https://api.shipments.test-y-sbm.com/shipment\", {\n        headers: {\n          Authorization: \"bearer \".concat(localStorage.token)\n        }\n      });\n      const list = data.data.data.shipments;\n      console.log(list);\n      this.setState({\n        shipments: list\n      });\n      console.log(this.state);\n    } catch (e) {\n      alert(\"Faild to load Shipments\");\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n      className: \"main-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \">\", React.createElement(\"ul\", {\n      className: \"sidebar-menu\",\n      \"data-widget\": \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"LIST OF SHIPMENTS\"), React.createElement(NewShipmentCard, {\n      onClick: this.showNewShipment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), this.state.shipments.map(shipment => React.createElement(ShipmentCard, {\n      shipment: shipment,\n      id: shipment.id,\n      name: shipment.name,\n      removeShipmentFromState: this.removeShipmentFromState,\n      key: shipment.id,\n      onClick: () => this.showShipment(shipment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      style: {\n        minHeight: \"901px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.shipments.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId && this.state.isShipmentOpen) {\n        return React.createElement(Shipment //name={item.name}\n        , {\n          nameSHIP: shipment.name,\n          listOfItems: shipment.items.map(item => {\n            return React.createElement(Item, {\n              itemName: item.code,\n              deleteItem: item.deleteItem,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            });\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      }\n    }), this.state.isNewShipmentOpen && React.createElement(NewShipmentInput, {\n      onChange: e => this.addNewShipmentName(e),\n      buttonClick: this.addNewShipment,\n      value: this.state.newShipmentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/home/master/ProjectBootstrap/test_task/src/Menu.js"],"names":["React","Shipment","Charts","ShipmentCard","axios","Item","NewShipmentCard","NewShipmentInput","Menu","Component","state","shipments","openedShipmentId","isNewShipmentOpen","isShipmentOpen","newShipmentId","newShipmentName","showShipment","e","id","setState","console","log","showNewShipment","addNewShipmentName","target","value","addNewShipment","event","post","name","headers","Authorization","localStorage","token","addNewShipmentToState","clearInput","newId","alert","shipment","items","currentArray","newArray","push","uuidv1","require","numbers","componentDidMount","data","get","list","render","map","removeShipmentFromState","minHeight","item","code","deleteItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./Shipment\";\nimport Charts from \"./Charts\";\nimport ShipmentCard from \"./ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./NewShipmentCard\";\nimport NewShipmentInput from \"./NewShipmentInput\";\n\nclass Menu extends React.Component {\n  state = {\n    shipments: [], //shipment name shouldbethere\n    openedShipmentId: \"\",\n    isNewShipmentOpen: false,\n    isShipmentOpen: false,\n    newShipmentId: \"\",\n    newShipmentName: \"\"\n  };\n  showShipment = e => {\n    if (this.state.openedShipmentId === e.id) {\n      this.setState({\n        isShipmentOpen: false,\n        openedShipmentId: \"\",\n        isNewShipmentOpen: false\n      });\n    } else {\n      this.setState({\n        openedShipmentId: e.id,\n        isShipmentOpen: true,\n        isNewShipmentOpen: false\n      });\n    }\n    console.log(this.state);\n  };\n  showNewShipment = () => {\n    console.log(this.state.isNewShipmentOpen);\n    if (this.state.isShipmentOpen) {\n      this.setState({\n        isShipmentOpen: false,\n        isNewShipmentOpen: true,\n        openedShipmentId: \"\"\n      });\n    } else {\n      this.state.isNewShipmentOpen\n        ? this.setState({ isNewShipmentOpen: false })\n        : this.setState({ isNewShipmentOpen: true, openedShipmentId: \"\" });\n    }\n  };\n  addNewShipmentName = e => {\n    this.setState({ newShipmentName: e.target.value });\n  };\n  addNewShipment = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addNewShipmentToState();\n      this.clearInput();\n      this.newId();\n    } catch (e) {\n      alert(\"Adding shipment failed\");\n      console.log(e);\n    }\n  };\n  addNewShipmentToState = () => {\n    const shipment = {\n      id: this.state.newShipmentId,\n      name: this.state.newShipmentName,\n      items: []\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.push(shipment);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  clearInput = () => {\n    this.setState({\n      newShipmentName: \"\"\n    });\n  };\n\n  newId = () => {\n    const uuidv1 = require(\"uuid/v1\");\n    const numbers = uuidv1();\n    console.log(numbers);\n    this.setState({\n      newShipmentId: numbers\n    });\n    console.log(this.state);\n  };\n\n  async componentDidMount() {\n    this.newId();\n    try {\n      const data = await axios.get(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      const list = data.data.data.shipments;\n      console.log(list);\n      this.setState({\n        shipments: list\n      });\n\n      console.log(this.state);\n    } catch (e) {\n      alert(\"Faild to load Shipments\");\n    }\n  }\n  render() {\n    return (\n      <>\n        {/* <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}> */}\n        <aside className=\"main-sidebar\">\n          {/* sidebar: style can be found in sidebar.less */}\n          <section className=\"sidebar\">\n            >{/* sidebar menu: : style can be found in sidebar.less */}\n            <ul className=\"sidebar-menu\" data-widget=\"tree\">\n              <li className=\"header\">LIST OF SHIPMENTS</li>\n              <NewShipmentCard onClick={this.showNewShipment} />\n              {this.state.shipments.map(shipment => (\n                <ShipmentCard\n                  shipment={shipment}\n                  id={shipment.id}\n                  name={shipment.name}\n                  removeShipmentFromState={this.removeShipmentFromState}\n                  key={shipment.id}\n                  onClick={() => this.showShipment(shipment)}\n                />\n              ))}\n\n              {/* <Charts /> */}\n            </ul>\n          </section>\n\n          {/* /.sidebar */}\n        </aside>\n        <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}>\n          {this.state.shipments.map(shipment => {\n            if (\n              shipment.id === this.state.openedShipmentId &&\n              this.state.isShipmentOpen\n            ) {\n              return (\n                <Shipment\n                  //name={item.name}\n                  nameSHIP={shipment.name}\n                  listOfItems={shipment.items.map(item => {\n                    return (\n                      <Item itemName={item.code} deleteItem={item.deleteItem} />\n                    );\n                  })}\n                />\n              );\n            }\n          })}\n          {this.state.isNewShipmentOpen && (\n            <NewShipmentInput\n              onChange={e => this.addNewShipmentName(e)}\n              buttonClick={this.addNewShipment}\n              value={this.state.newShipmentName}\n            />\n          )}\n        </div>\n        {/* </div> */}\n      </>\n    );\n  }\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}