{"ast":null,"code":"var _jsxFileName = \"/home/master/ProjectBootstrap/test_task/src/Menu.js\";\nimport React from \"react\";\nimport Shipment from \"./Shipment\";\nimport Charts from \"./Charts\";\nimport ShipmentCard from \"./ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./NewShipmentCard\";\nimport NewShipmentInput from \"./NewShipmentInput\";\n\nclass Menu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shipments: [],\n      //shipment name shouldbethere\n      openedShipmentId: \"\",\n      openedShipmentName: \"\",\n      isNewShipmentOpen: false,\n      isShipmentOpen: false,\n      newShipmentId: \"\",\n      newShipmentName: \"\",\n      newItemId: \"\",\n      newItemName: \"\"\n    };\n\n    this.showShipment = e => {\n      if (this.state.openedShipmentId === e.id) {\n        this.setState({\n          isShipmentOpen: false,\n          openedShipmentId: \"\",\n          isNewShipmentOpen: false\n        });\n      } else {\n        this.setState({\n          openedShipmentId: e.id,\n          openedShipmentName: e.name,\n          isShipmentOpen: true,\n          isNewShipmentOpen: false\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.showNewShipment = () => {\n      if (this.state.isShipmentOpen) {\n        this.setState({\n          isShipmentOpen: false,\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      } else {\n        this.state.isNewShipmentOpen ? this.setState({\n          isNewShipmentOpen: false\n        }) : this.setState({\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      }\n    };\n\n    this.addNewShipmentName = e => {\n      this.setState({\n        newShipmentName: e.target.value\n      });\n    };\n\n    this.addNewShipment = async event => {\n      console.log(event);\n\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/shipment\", {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addNewShipmentToState();\n        this.clearInput();\n        this.newShipmentId();\n      } catch (e) {\n        alert(\"Adding shipment failed\");\n        console.log(e);\n      }\n    };\n\n    this.addNewShipmentToState = () => {\n      const shipment = {\n        id: this.state.newShipmentId,\n        name: this.state.newShipmentName,\n        items: []\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.push(shipment);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteShipment = async event => {\n      const shipmentId = this.state.openedShipmentId;\n\n      try {\n        await axios.delete(\"https://api.shipments.test-y-sbm.com/shipment/\".concat(shipmentId), {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.deleteShipmentFromState();\n      } catch (e) {\n        alert(\"Deleting shipment failed\");\n      }\n    };\n\n    this.deleteShipmentFromState = () => {\n      const shipmentId = this.state.openedShipmentId;\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray.filter(item => item.id !== shipmentId);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        newShipmentName: \"\",\n        newItemName: \"\"\n      });\n    };\n\n    this.newShipmentId = () => {\n      const uuidv1 = require(\"uuid/v1\");\n\n      const numbers = uuidv1();\n      this.setState({\n        newShipmentId: numbers\n      });\n    };\n\n    this.addNewItemName = e => {\n      this.setState({\n        newItemName: e.target.value\n      });\n    };\n\n    this.addItem = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/item\", {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addItemToState();\n        this.newItemId();\n        this.clearInput();\n      } catch (e) {\n        alert(e);\n      }\n    };\n\n    this.addItemToState = () => {\n      const item = {\n        id: this.state.newItemId,\n        code: this.state.newItemName\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.map(shipment => {\n        if (shipment.id === this.state.openedShipmentId) {\n          return shipment.items.push(item);\n        }\n      });\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteItem = async e => {\n      // try {\n      //   await axios.delete(`https://api.shipments.test-y-sbm.com/item/${e.id}`, {\n      //     headers: {\n      //       Authorization: `bearer ${localStorage.token}`\n      //     }\n      //   });\n      this.deleteItemFromState(e); // } catch (e) {\n      //   alert(\"Deleting item failed\");\n      // }\n    };\n\n    this.deleteItemFromState = item => {\n      const shipmentId = item.shipment_id;\n      const currentArray = [...this.state.shipments];\n      console.log(currentArray); //const newArray = currentArray.filter(item => item.id !== shipmentId);\n      //console.log(newArray);\n      // this.setState({\n      //   shipments: newArray\n      // });\n      // this.setState({\n      //   shipments: newArray\n      // });\n\n      console.log(item);\n    };\n\n    this.newItemId = () => {\n      const uuidv1 = require(\"uuid/v1\");\n\n      const numbers = uuidv1();\n      this.setState({\n        newItemId: numbers\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.newShipmentId();\n    this.newItemId();\n\n    try {\n      const data = await axios.get(\"https://api.shipments.test-y-sbm.com/shipment\", {\n        headers: {\n          Authorization: \"bearer \".concat(localStorage.token)\n        }\n      });\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Faild to load Shipments\");\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n      className: \"main-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \">\", React.createElement(\"ul\", {\n      className: \"sidebar-menu\",\n      \"data-widget\": \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"LIST OF SHIPMENTS\"), React.createElement(NewShipmentCard, {\n      onClick: this.showNewShipment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), this.state.shipments.map(shipment => React.createElement(ShipmentCard, {\n      shipment: shipment,\n      id: shipment.id,\n      name: shipment.name,\n      removeShipmentFromState: this.removeShipmentFromState,\n      key: shipment.id,\n      onClick: () => this.showShipment(shipment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      style: {\n        minHeight: \"901px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.state.shipments.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId && this.state.isShipmentOpen) {\n        return React.createElement(Shipment //name={item.name}\n        , {\n          nameSHIP: shipment.name,\n          onChange: e => this.addNewItemName(e),\n          onClick: this.addItem,\n          value: this.state.newItemName,\n          listOfItems: shipment.items.map(item => {\n            return React.createElement(Item, {\n              itemName: item.code,\n              deleteItem: () => this.deleteItem(item),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275\n              },\n              __self: this\n            });\n          }),\n          deleteShipment: e => this.deleteShipment(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        });\n      }\n    }), this.state.isNewShipmentOpen && React.createElement(NewShipmentInput, {\n      onChange: e => this.addNewShipmentName(e),\n      buttonClick: this.addNewShipment,\n      value: this.state.newShipmentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/home/master/ProjectBootstrap/test_task/src/Menu.js"],"names":["React","Shipment","Charts","ShipmentCard","axios","Item","NewShipmentCard","NewShipmentInput","Menu","Component","state","shipments","openedShipmentId","openedShipmentName","isNewShipmentOpen","isShipmentOpen","newShipmentId","newShipmentName","newItemId","newItemName","showShipment","e","id","setState","name","console","log","showNewShipment","addNewShipmentName","target","value","addNewShipment","event","post","headers","Authorization","localStorage","token","addNewShipmentToState","clearInput","alert","shipment","items","currentArray","newArray","push","deleteShipment","shipmentId","delete","deleteShipmentFromState","filter","item","uuidv1","require","numbers","addNewItemName","addItem","code","shipment_id","addItemToState","map","deleteItem","deleteItemFromState","componentDidMount","data","get","list","render","removeShipmentFromState","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./Shipment\";\nimport Charts from \"./Charts\";\nimport ShipmentCard from \"./ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./NewShipmentCard\";\nimport NewShipmentInput from \"./NewShipmentInput\";\n\nclass Menu extends React.Component {\n  state = {\n    shipments: [], //shipment name shouldbethere\n    openedShipmentId: \"\",\n    openedShipmentName: \"\",\n    isNewShipmentOpen: false,\n    isShipmentOpen: false,\n    newShipmentId: \"\",\n    newShipmentName: \"\",\n    newItemId: \"\",\n    newItemName: \"\"\n  };\n  //Showing the shipment that was clicked\n  showShipment = e => {\n    if (this.state.openedShipmentId === e.id) {\n      this.setState({\n        isShipmentOpen: false,\n        openedShipmentId: \"\",\n        isNewShipmentOpen: false\n      });\n    } else {\n      this.setState({\n        openedShipmentId: e.id,\n        openedShipmentName: e.name,\n        isShipmentOpen: true,\n        isNewShipmentOpen: false\n      });\n    }\n    console.log(this.state);\n  };\n  //showing the shipment that has a possibility to add another ship\n  showNewShipment = () => {\n    if (this.state.isShipmentOpen) {\n      this.setState({\n        isShipmentOpen: false,\n        isNewShipmentOpen: true,\n        openedShipmentId: \"\"\n      });\n    } else {\n      this.state.isNewShipmentOpen\n        ? this.setState({ isNewShipmentOpen: false })\n        : this.setState({ isNewShipmentOpen: true, openedShipmentId: \"\" });\n    }\n  };\n  //Adding and deleting shipments functions\n  addNewShipmentName = e => {\n    this.setState({ newShipmentName: e.target.value });\n  };\n  addNewShipment = async event => {\n    console.log(event);\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addNewShipmentToState();\n      this.clearInput();\n      this.newShipmentId();\n    } catch (e) {\n      alert(\"Adding shipment failed\");\n      console.log(e);\n    }\n  };\n  addNewShipmentToState = () => {\n    const shipment = {\n      id: this.state.newShipmentId,\n      name: this.state.newShipmentName,\n      items: []\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.push(shipment);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  deleteShipment = async event => {\n    const shipmentId = this.state.openedShipmentId;\n    try {\n      await axios.delete(\n        `https://api.shipments.test-y-sbm.com/shipment/${shipmentId}`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.deleteShipmentFromState();\n    } catch (e) {\n      alert(\"Deleting shipment failed\");\n    }\n  };\n  deleteShipmentFromState = () => {\n    const shipmentId = this.state.openedShipmentId;\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray.filter(item => item.id !== shipmentId);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  clearInput = () => {\n    this.setState({\n      newShipmentName: \"\",\n      newItemName: \"\"\n    });\n  };\n\n  newShipmentId = () => {\n    const uuidv1 = require(\"uuid/v1\");\n    const numbers = uuidv1();\n\n    this.setState({\n      newShipmentId: numbers\n    });\n  };\n\n  addNewItemName = e => {\n    this.setState({ newItemName: e.target.value });\n  };\n  addItem = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/item`,\n        {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addItemToState();\n      this.newItemId();\n      this.clearInput();\n    } catch (e) {\n      alert(e);\n    }\n  };\n  addItemToState = () => {\n    const item = {\n      id: this.state.newItemId,\n      code: this.state.newItemName\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId) {\n        return shipment.items.push(item);\n      }\n    });\n    this.setState({\n      shipments: newArray\n    });\n  };\n  deleteItem = async e => {\n    // try {\n    //   await axios.delete(`https://api.shipments.test-y-sbm.com/item/${e.id}`, {\n    //     headers: {\n    //       Authorization: `bearer ${localStorage.token}`\n    //     }\n    //   });\n    this.deleteItemFromState(e);\n    // } catch (e) {\n    //   alert(\"Deleting item failed\");\n    // }\n  };\n\n  deleteItemFromState = item => {\n    const shipmentId = item.shipment_id;\n    const currentArray = [...this.state.shipments];\n    console.log(currentArray);\n    //const newArray = currentArray.filter(item => item.id !== shipmentId);\n    //console.log(newArray);\n    // this.setState({\n    //   shipments: newArray\n    // });\n    // this.setState({\n    //   shipments: newArray\n    // });\n    console.log(item);\n  };\n  newItemId = () => {\n    const uuidv1 = require(\"uuid/v1\");\n    const numbers = uuidv1();\n\n    this.setState({\n      newItemId: numbers\n    });\n  };\n\n  async componentDidMount() {\n    this.newShipmentId();\n    this.newItemId();\n    try {\n      const data = await axios.get(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Faild to load Shipments\");\n    }\n  }\n  render() {\n    return (\n      <>\n        {/* <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}> */}\n        <aside className=\"main-sidebar\">\n          {/* sidebar: style can be found in sidebar.less */}\n          <section className=\"sidebar\">\n            >{/* sidebar menu: : style can be found in sidebar.less */}\n            <ul className=\"sidebar-menu\" data-widget=\"tree\">\n              <li className=\"header\">LIST OF SHIPMENTS</li>\n              <NewShipmentCard onClick={this.showNewShipment} />\n              {this.state.shipments.map(shipment => (\n                <ShipmentCard\n                  shipment={shipment}\n                  id={shipment.id}\n                  name={shipment.name}\n                  removeShipmentFromState={this.removeShipmentFromState}\n                  key={shipment.id}\n                  onClick={() => this.showShipment(shipment)}\n                />\n              ))}\n\n              {/* <Charts /> */}\n            </ul>\n          </section>\n\n          {/* /.sidebar */}\n        </aside>\n        <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}>\n          {this.state.shipments.map(shipment => {\n            if (\n              shipment.id === this.state.openedShipmentId &&\n              this.state.isShipmentOpen\n            ) {\n              return (\n                <Shipment\n                  //name={item.name}\n                  nameSHIP={shipment.name}\n                  onChange={e => this.addNewItemName(e)}\n                  onClick={this.addItem}\n                  value={this.state.newItemName}\n                  listOfItems={shipment.items.map(item => {\n                    return (\n                      <Item\n                        itemName={item.code}\n                        deleteItem={() => this.deleteItem(item)}\n                      />\n                    );\n                  })}\n                  deleteShipment={e => this.deleteShipment(e)}\n                />\n              );\n            }\n          })}\n          {this.state.isNewShipmentOpen && (\n            <NewShipmentInput\n              onChange={e => this.addNewShipmentName(e)}\n              buttonClick={this.addNewShipment}\n              value={this.state.newShipmentName}\n            />\n          )}\n        </div>\n        {/* </div> */}\n      </>\n    );\n  }\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}