{"ast":null,"code":"var _jsxFileName = \"/home/master/ProjectBootstrap/test_task/src/ShipmentsAndItems.js\";\nimport React from \"react\";\nimport Shipment from \"./Components/DummyComponents/Shipment\"; //import Charts from \"./Charts\";\n\nimport ShipmentCard from \"./Components/DummyComponents/ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./Components/DummyComponents/NewShipmentCard\";\nimport NewShipmentInput from \"./Components/DummyComponents/NewShipmentInput\";\n\nclass ShipmentsAndItems extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shipments: [],\n      //shipment name shouldbethere\n      openedShipmentId: \"\",\n      openedShipmentName: \"\",\n      isNewShipmentOpen: false,\n      isShipmentOpen: false,\n      newShipmentId: \"\",\n      newShipmentName: \"\",\n      newItemId: \"\",\n      newItemName: \"\"\n    };\n\n    this.showShipment = e => {\n      if (this.state.openedShipmentId === e.id) {\n        this.setState({\n          isShipmentOpen: false,\n          openedShipmentId: \"\",\n          isNewShipmentOpen: false\n        });\n      } else {\n        this.setState({\n          openedShipmentId: e.id,\n          openedShipmentName: e.name,\n          isShipmentOpen: true,\n          isNewShipmentOpen: false\n        });\n      }\n    };\n\n    this.showNewShipment = () => {\n      if (this.state.isShipmentOpen) {\n        this.setState({\n          isShipmentOpen: false,\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      } else {\n        this.state.isNewShipmentOpen ? this.setState({\n          isNewShipmentOpen: false\n        }) : this.setState({\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      }\n    };\n\n    this.addNewShipmentName = e => {\n      this.setState({\n        newShipmentName: e.target.value\n      });\n    };\n\n    this.addNewShipment = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/shipment\", {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addNewShipmentToState();\n        this.clearInput();\n        this.newShipmentId();\n      } catch (e) {\n        alert(\"Adding shipment failed\");\n      }\n    };\n\n    this.addNewShipmentToState = () => {\n      const shipment = {\n        id: this.state.newShipmentId,\n        name: this.state.newShipmentName,\n        items: []\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.push(shipment);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteShipment = async event => {\n      const shipmentId = this.state.openedShipmentId;\n\n      try {\n        await axios.delete(\"https://api.shipments.test-y-sbm.com/shipment/\".concat(shipmentId), {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.deleteShipmentFromState();\n      } catch (e) {\n        alert(\"Deleting shipment failed\");\n      }\n    };\n\n    this.deleteShipmentFromState = () => {\n      const shipmentId = this.state.openedShipmentId;\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray.filter(item => item.id !== shipmentId);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        newShipmentName: \"\",\n        newItemName: \"\"\n      });\n    };\n\n    this.newShipmentId = () => {\n      const uuidv1 = require(\"uuid/v1\");\n\n      const numbers = uuidv1();\n      this.setState({\n        newShipmentId: numbers\n      });\n    };\n\n    this.addNewItemName = e => {\n      this.setState({\n        newItemName: e.target.value\n      });\n    };\n\n    this.addItem = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/item\", {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addItemToState();\n        this.newItemId();\n        this.clearInput();\n      } catch (e) {\n        alert(e);\n      }\n    };\n\n    this.addItemToState = () => {\n      const item = {\n        id: this.state.newItemId,\n        code: this.state.newItemName,\n        shipment_id: this.state.openedShipmentId\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.map(shipment => {\n        if (shipment.id === this.state.openedShipmentId) {\n          return shipment.items.push(item);\n        }\n      });\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteItem = async e => {\n      try {\n        await axios.delete(\"https://api.shipments.test-y-sbm.com/item/\".concat(e.id), {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.deleteItemFromState(e);\n      } catch (e) {\n        alert(\"Deleting item failed\");\n      }\n    };\n\n    this.deleteItemFromState = item => {\n      const shipmentId = item.shipment_id;\n      const itemId = item.id;\n      const currentArray = [...this.state.shipments];\n      const newArray = [];\n      currentArray.map(shipment => {\n        if (shipment.id === shipmentId) {\n          const Shipment = shipment;\n          const shipItems = shipment.items;\n          const newItems = shipItems.filter(item => item.id !== itemId);\n          Shipment.items = newItems;\n          newArray.push(Shipment);\n        } else {\n          newArray.push(shipment);\n        }\n      });\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.newItemId = () => {\n      const uuidv1 = require(\"uuid/v1\");\n\n      const numbers = uuidv1();\n      this.setState({\n        newItemId: numbers\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.newShipmentId();\n    this.newItemId();\n\n    try {\n      const data = await axios.get(\"https://api.shipments.test-y-sbm.com/shipment\", {\n        headers: {\n          Authorization: \"bearer \".concat(localStorage.token)\n        }\n      });\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Failed to load Shipments\");\n      this.props.props.history.push(\"/login\");\n      localStorage.clear();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n      className: \"main-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \">\", React.createElement(\"ul\", {\n      className: \"sidebar-menu\",\n      \"data-widget\": \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"LIST OF SHIPMENTS\"), React.createElement(NewShipmentCard, {\n      onClick: this.showNewShipment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), this.state.shipments.map(shipment => React.createElement(ShipmentCard, {\n      shipment: shipment,\n      id: shipment.id,\n      name: shipment.name,\n      removeShipmentFromState: this.removeShipmentFromState,\n      key: shipment.id,\n      onClick: () => this.showShipment(shipment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      style: {\n        minHeight: \"901px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.state.shipments.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId && this.state.isShipmentOpen) {\n        return React.createElement(Shipment //name={item.name}\n        , {\n          nameSHIP: shipment.name,\n          onChange: e => this.addNewItemName(e),\n          onClick: this.addItem,\n          value: this.state.newItemName,\n          key: shipment.id,\n          listOfItems: shipment.items.map(item => {\n            return React.createElement(Item, {\n              itemName: item.code,\n              key: item.id,\n              deleteItem: () => {\n                this.deleteItem(item);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281\n              },\n              __self: this\n            });\n          }),\n          deleteShipment: e => this.deleteShipment(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        });\n      }\n    }), this.state.isNewShipmentOpen && React.createElement(NewShipmentInput, {\n      onChange: e => this.addNewShipmentName(e),\n      buttonClick: this.addNewShipment,\n      value: this.state.newShipmentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShipmentsAndItems;","map":{"version":3,"sources":["/home/master/ProjectBootstrap/test_task/src/ShipmentsAndItems.js"],"names":["React","Shipment","ShipmentCard","axios","Item","NewShipmentCard","NewShipmentInput","ShipmentsAndItems","Component","state","shipments","openedShipmentId","openedShipmentName","isNewShipmentOpen","isShipmentOpen","newShipmentId","newShipmentName","newItemId","newItemName","showShipment","e","id","setState","name","showNewShipment","addNewShipmentName","target","value","addNewShipment","event","post","headers","Authorization","localStorage","token","addNewShipmentToState","clearInput","alert","shipment","items","currentArray","newArray","push","deleteShipment","shipmentId","delete","deleteShipmentFromState","filter","item","uuidv1","require","numbers","addNewItemName","addItem","code","shipment_id","addItemToState","map","deleteItem","deleteItemFromState","itemId","shipItems","newItems","componentDidMount","data","get","list","props","history","clear","render","removeShipmentFromState","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./Components/DummyComponents/Shipment\";\n//import Charts from \"./Charts\";\nimport ShipmentCard from \"./Components/DummyComponents/ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./Item\";\nimport NewShipmentCard from \"./Components/DummyComponents/NewShipmentCard\";\nimport NewShipmentInput from \"./Components/DummyComponents/NewShipmentInput\";\n\nclass ShipmentsAndItems extends React.Component {\n  state = {\n    shipments: [], //shipment name shouldbethere\n    openedShipmentId: \"\",\n    openedShipmentName: \"\",\n    isNewShipmentOpen: false,\n    isShipmentOpen: false,\n    newShipmentId: \"\",\n    newShipmentName: \"\",\n    newItemId: \"\",\n    newItemName: \"\"\n  };\n  //Showing the shipment that was clicked\n  showShipment = e => {\n    if (this.state.openedShipmentId === e.id) {\n      this.setState({\n        isShipmentOpen: false,\n        openedShipmentId: \"\",\n        isNewShipmentOpen: false\n      });\n    } else {\n      this.setState({\n        openedShipmentId: e.id,\n        openedShipmentName: e.name,\n        isShipmentOpen: true,\n        isNewShipmentOpen: false\n      });\n    }\n  };\n  //showing the shipment that has a possibility to add another ship\n  showNewShipment = () => {\n    if (this.state.isShipmentOpen) {\n      this.setState({\n        isShipmentOpen: false,\n        isNewShipmentOpen: true,\n        openedShipmentId: \"\"\n      });\n    } else {\n      this.state.isNewShipmentOpen\n        ? this.setState({ isNewShipmentOpen: false })\n        : this.setState({ isNewShipmentOpen: true, openedShipmentId: \"\" });\n    }\n  };\n  //Adding and deleting shipments functions\n  addNewShipmentName = e => {\n    this.setState({ newShipmentName: e.target.value });\n  };\n  addNewShipment = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addNewShipmentToState();\n      this.clearInput();\n      this.newShipmentId();\n    } catch (e) {\n      alert(\"Adding shipment failed\");\n    }\n  };\n  addNewShipmentToState = () => {\n    const shipment = {\n      id: this.state.newShipmentId,\n      name: this.state.newShipmentName,\n      items: []\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.push(shipment);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  deleteShipment = async event => {\n    const shipmentId = this.state.openedShipmentId;\n    try {\n      await axios.delete(\n        `https://api.shipments.test-y-sbm.com/shipment/${shipmentId}`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.deleteShipmentFromState();\n    } catch (e) {\n      alert(\"Deleting shipment failed\");\n    }\n  };\n  deleteShipmentFromState = () => {\n    const shipmentId = this.state.openedShipmentId;\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray.filter(item => item.id !== shipmentId);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  clearInput = () => {\n    this.setState({\n      newShipmentName: \"\",\n      newItemName: \"\"\n    });\n  };\n\n  newShipmentId = () => {\n    const uuidv1 = require(\"uuid/v1\");\n    const numbers = uuidv1();\n\n    this.setState({\n      newShipmentId: numbers\n    });\n  };\n\n  addNewItemName = e => {\n    this.setState({ newItemName: e.target.value });\n  };\n  addItem = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/item`,\n        {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addItemToState();\n      this.newItemId();\n      this.clearInput();\n    } catch (e) {\n      alert(e);\n    }\n  };\n  addItemToState = () => {\n    const item = {\n      id: this.state.newItemId,\n      code: this.state.newItemName,\n      shipment_id: this.state.openedShipmentId\n    };\n\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId) {\n        return shipment.items.push(item);\n      }\n    });\n    this.setState({\n      shipments: newArray\n    });\n  };\n  deleteItem = async e => {\n    try {\n      await axios.delete(`https://api.shipments.test-y-sbm.com/item/${e.id}`, {\n        headers: {\n          Authorization: `bearer ${localStorage.token}`\n        }\n      });\n      this.deleteItemFromState(e);\n    } catch (e) {\n      alert(\"Deleting item failed\");\n    }\n  };\n\n  deleteItemFromState = item => {\n    const shipmentId = item.shipment_id;\n    const itemId = item.id;\n    const currentArray = [...this.state.shipments];\n    const newArray = [];\n    currentArray.map(shipment => {\n      if (shipment.id === shipmentId) {\n        const Shipment = shipment;\n        const shipItems = shipment.items;\n        const newItems = shipItems.filter(item => item.id !== itemId);\n        Shipment.items = newItems;\n        newArray.push(Shipment);\n      } else {\n        newArray.push(shipment);\n      }\n    });\n    this.setState({ shipments: newArray });\n  };\n  newItemId = () => {\n    const uuidv1 = require(\"uuid/v1\");\n    const numbers = uuidv1();\n\n    this.setState({\n      newItemId: numbers\n    });\n  };\n\n  async componentDidMount() {\n    this.newShipmentId();\n    this.newItemId();\n    try {\n      const data = await axios.get(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Failed to load Shipments\");\n      this.props.props.history.push(\"/login\");\n      localStorage.clear();\n    }\n  }\n  render() {\n    return (\n      <>\n        {/* <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}> */}\n        <aside className=\"main-sidebar\">\n          {/* sidebar: style can be found in sidebar.less */}\n          <section className=\"sidebar\">\n            >{/* sidebar menu: : style can be found in sidebar.less */}\n            <ul className=\"sidebar-menu\" data-widget=\"tree\">\n              <li className=\"header\">LIST OF SHIPMENTS</li>\n              <NewShipmentCard onClick={this.showNewShipment} />\n              {this.state.shipments.map(shipment => (\n                <ShipmentCard\n                  shipment={shipment}\n                  id={shipment.id}\n                  name={shipment.name}\n                  removeShipmentFromState={this.removeShipmentFromState}\n                  key={shipment.id}\n                  onClick={() => this.showShipment(shipment)}\n                />\n              ))}\n\n              {/* <Charts /> */}\n            </ul>\n          </section>\n\n          {/* /.sidebar */}\n        </aside>\n        <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}>\n          {this.state.shipments.map(shipment => {\n            if (\n              shipment.id === this.state.openedShipmentId &&\n              this.state.isShipmentOpen\n            ) {\n              return (\n                <Shipment\n                  //name={item.name}\n                  nameSHIP={shipment.name}\n                  onChange={e => this.addNewItemName(e)}\n                  onClick={this.addItem}\n                  value={this.state.newItemName}\n                  key={shipment.id}\n                  listOfItems={shipment.items.map(item => {\n                    return (\n                      <Item\n                        itemName={item.code}\n                        key={item.id}\n                        deleteItem={() => {\n                          this.deleteItem(item);\n                        }}\n                      />\n                    );\n                  })}\n                  deleteShipment={e => this.deleteShipment(e)}\n                />\n              );\n            }\n          })}\n          {this.state.isNewShipmentOpen && (\n            <NewShipmentInput\n              onChange={e => this.addNewShipmentName(e)}\n              buttonClick={this.addNewShipment}\n              value={this.state.newShipmentName}\n            />\n          )}\n        </div>\n        {/* </div> */}\n      </>\n    );\n  }\n}\n\nexport default ShipmentsAndItems;\n"]},"metadata":{},"sourceType":"module"}