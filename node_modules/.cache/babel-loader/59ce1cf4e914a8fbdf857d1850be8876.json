{"ast":null,"code":"var _jsxFileName = \"/home/master/ProjectBootstrap/test_task/src/Components/ShipmentsAndItems.js\";\nimport React from \"react\";\nimport Shipment from \"./DummyComponents/Shipment\"; //import Charts from \"./Charts\";\n\nimport ShipmentCard from \"./DummyComponents/ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./DummyComponents/Item\";\nimport NewShipmentCard from \"./DummyComponents/NewShipmentCard\";\nimport NewShipmentInput from \"./DummyComponents/NewShipmentInput\";\nimport newShipmentId from \"../Modules/newShipmentId\";\nimport newItemId from \"../Modules/newItemId\";\nimport clearItemInput from \"../Modules/clearItemInput\";\nimport clearShipmentInput from \"../Modules/clearShipmentInput\";\n\nclass ShipmentsAndItems extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shipments: [],\n      openedShipmentId: \"\",\n      openedShipmentName: \"\",\n      isNewShipmentOpen: false,\n      isShipmentOpen: false,\n      newShipmentId: \"\",\n      newShipmentName: \"\",\n      newItemId: \"\",\n      newItemName: \"\"\n    };\n\n    this.showShipment = e => {\n      if (this.state.openedShipmentId === e.id) {\n        this.setState({\n          isShipmentOpen: false,\n          openedShipmentId: \"\",\n          isNewShipmentOpen: false\n        });\n      } else {\n        this.setState({\n          openedShipmentId: e.id,\n          openedShipmentName: e.name,\n          isShipmentOpen: true,\n          isNewShipmentOpen: false\n        });\n      }\n    };\n\n    this.showNewShipment = () => {\n      if (this.state.isShipmentOpen) {\n        this.setState({\n          isShipmentOpen: false,\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      } else {\n        this.state.isNewShipmentOpen ? this.setState({\n          isNewShipmentOpen: false\n        }) : this.setState({\n          isNewShipmentOpen: true,\n          openedShipmentId: \"\"\n        });\n      }\n    };\n\n    this.addNewShipmentName = e => {\n      this.setState({\n        newShipmentName: e.target.value\n      });\n    };\n\n    this.hideAddNewShipment = e => {\n      console.log(e);\n    };\n\n    this.addNewShipment = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/shipment\", {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addNewShipmentToState();\n        this.hideAddNewShipment();\n        clearShipmentInput(this);\n        newShipmentId(this);\n      } catch (e) {\n        alert(\"Adding shipment failed\");\n      }\n    };\n\n    this.addNewShipmentToState = () => {\n      const shipment = {\n        id: this.state.newShipmentId,\n        name: this.state.newShipmentName,\n        items: []\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.push(shipment);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteShipment = async event => {\n      const shipmentId = this.state.openedShipmentId;\n\n      try {\n        await axios.delete(\"https://api.shipments.test-y-sbm.com/shipment/\".concat(shipmentId), {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.deleteShipmentFromState();\n      } catch (e) {\n        alert(\"Deleting shipment failed\");\n      }\n    };\n\n    this.deleteShipmentFromState = () => {\n      const shipmentId = this.state.openedShipmentId;\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray.filter(item => item.id !== shipmentId);\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.addNewItemName = e => {\n      this.setState({\n        newItemName: e.target.value\n      });\n    };\n\n    this.addItem = async event => {\n      try {\n        await axios.post(\"https://api.shipments.test-y-sbm.com/item\", {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        }, {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.addItemToState();\n        newItemId(this);\n        clearItemInput(this);\n      } catch (e) {\n        alert(e);\n      }\n    };\n\n    this.addItemToState = () => {\n      const item = {\n        id: this.state.newItemId,\n        code: this.state.newItemName,\n        shipment_id: this.state.openedShipmentId\n      };\n      const currentArray = [...this.state.shipments];\n      const newArray = currentArray;\n      newArray.map(shipment => {\n        if (shipment.id === this.state.openedShipmentId) {\n          return shipment.items.push(item);\n        }\n      });\n      this.setState({\n        shipments: newArray\n      });\n    };\n\n    this.deleteItem = async e => {\n      try {\n        await axios.delete(\"https://api.shipments.test-y-sbm.com/item/\".concat(e.id), {\n          headers: {\n            Authorization: \"bearer \".concat(localStorage.token)\n          }\n        });\n        this.deleteItemFromState(e);\n      } catch (e) {\n        alert(\"Deleting item failed\");\n      }\n    };\n\n    this.deleteItemFromState = item => {\n      const shipmentId = item.shipment_id;\n      const itemId = item.id;\n      const currentArray = [...this.state.shipments];\n      const newArray = [];\n      currentArray.map(shipment => {\n        if (shipment.id === shipmentId) {\n          const Shipment = shipment;\n          const shipItems = shipment.items;\n          const newItems = shipItems.filter(item => item.id !== itemId);\n          Shipment.items = newItems;\n          newArray.push(Shipment);\n        } else {\n          newArray.push(shipment);\n        }\n      });\n      this.setState({\n        shipments: newArray\n      });\n    };\n  }\n\n  //downloading all shipments\n  async componentDidMount() {\n    newShipmentId(this);\n    newItemId(this);\n\n    try {\n      const data = await axios.get(\"https://api.shipments.test-y-sbm.com/shipment\", {\n        headers: {\n          Authorization: \"bearer \".concat(localStorage.token)\n        }\n      });\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Failed to load Shipments\");\n      this.props.props.history.push(\"/login\");\n      localStorage.clear();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"aside\", {\n      className: \"main-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"sidebar-menu\",\n      \"data-widget\": \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"LIST OF SHIPMENTS\"), React.createElement(NewShipmentCard, {\n      onClick: this.showNewShipment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), this.state.shipments.map(shipment => React.createElement(ShipmentCard, {\n      shipment: shipment,\n      id: shipment.id,\n      name: shipment.name,\n      removeShipmentFromState: this.removeShipmentFromState,\n      key: shipment.id,\n      onClick: () => this.showShipment(shipment),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      style: {\n        minHeight: \"901px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.state.shipments.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId && this.state.isShipmentOpen) {\n        return React.createElement(Shipment //name={item.name}\n        , {\n          nameSHIP: shipment.name,\n          onChange: e => this.addNewItemName(e),\n          onClick: this.addItem,\n          value: this.state.newItemName,\n          key: shipment.id,\n          listOfItems: shipment.items.map(item => {\n            return React.createElement(Item, {\n              itemName: item.code,\n              key: item.id,\n              deleteItem: () => {\n                this.deleteItem(item);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 269\n              },\n              __self: this\n            });\n          }),\n          deleteShipment: e => this.deleteShipment(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        });\n      }\n    }), this.state.isNewShipmentOpen && React.createElement(NewShipmentInput, {\n      onChange: e => this.addNewShipmentName(e),\n      buttonClick: this.addNewShipment,\n      value: this.state.newShipmentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShipmentsAndItems;","map":{"version":3,"sources":["/home/master/ProjectBootstrap/test_task/src/Components/ShipmentsAndItems.js"],"names":["React","Shipment","ShipmentCard","axios","Item","NewShipmentCard","NewShipmentInput","newShipmentId","newItemId","clearItemInput","clearShipmentInput","ShipmentsAndItems","Component","state","shipments","openedShipmentId","openedShipmentName","isNewShipmentOpen","isShipmentOpen","newShipmentName","newItemName","showShipment","e","id","setState","name","showNewShipment","addNewShipmentName","target","value","hideAddNewShipment","console","log","addNewShipment","event","post","headers","Authorization","localStorage","token","addNewShipmentToState","alert","shipment","items","currentArray","newArray","push","deleteShipment","shipmentId","delete","deleteShipmentFromState","filter","item","addNewItemName","addItem","code","shipment_id","addItemToState","map","deleteItem","deleteItemFromState","itemId","shipItems","newItems","componentDidMount","data","get","list","props","history","clear","render","removeShipmentFromState","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./DummyComponents/Shipment\";\n//import Charts from \"./Charts\";\nimport ShipmentCard from \"./DummyComponents/ShipmentCard\";\nimport axios from \"axios\";\nimport Item from \"./DummyComponents/Item\";\nimport NewShipmentCard from \"./DummyComponents/NewShipmentCard\";\nimport NewShipmentInput from \"./DummyComponents/NewShipmentInput\";\nimport newShipmentId from \"../Modules/newShipmentId\";\nimport newItemId from \"../Modules/newItemId\";\nimport clearItemInput from \"../Modules/clearItemInput\";\nimport clearShipmentInput from \"../Modules/clearShipmentInput\";\nclass ShipmentsAndItems extends React.Component {\n  state = {\n    shipments: [],\n    openedShipmentId: \"\",\n    openedShipmentName: \"\",\n    isNewShipmentOpen: false,\n    isShipmentOpen: false,\n    newShipmentId: \"\",\n    newShipmentName: \"\",\n    newItemId: \"\",\n    newItemName: \"\"\n  };\n  //Showing the shipment that was clicked\n  showShipment = e => {\n    if (this.state.openedShipmentId === e.id) {\n      this.setState({\n        isShipmentOpen: false,\n        openedShipmentId: \"\",\n        isNewShipmentOpen: false\n      });\n    } else {\n      this.setState({\n        openedShipmentId: e.id,\n        openedShipmentName: e.name,\n        isShipmentOpen: true,\n        isNewShipmentOpen: false\n      });\n    }\n  };\n  //showing the shipment that has a possibility to add another ship\n  showNewShipment = () => {\n    if (this.state.isShipmentOpen) {\n      this.setState({\n        isShipmentOpen: false,\n        isNewShipmentOpen: true,\n        openedShipmentId: \"\"\n      });\n    } else {\n      this.state.isNewShipmentOpen\n        ? this.setState({ isNewShipmentOpen: false })\n        : this.setState({ isNewShipmentOpen: true, openedShipmentId: \"\" });\n    }\n  };\n  //Adding and deleting shipments functions\n\n  //function that adds input value from a add shipment section\n  addNewShipmentName = e => {\n    this.setState({ newShipmentName: e.target.value });\n  };\n  hideAddNewShipment = e => {\n    console.log(e);\n  };\n\n  //adding shipment\n  addNewShipment = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          id: this.state.newShipmentId,\n          name: this.state.newShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addNewShipmentToState();\n      this.hideAddNewShipment();\n      clearShipmentInput(this);\n      newShipmentId(this);\n    } catch (e) {\n      alert(\"Adding shipment failed\");\n    }\n  };\n  addNewShipmentToState = () => {\n    const shipment = {\n      id: this.state.newShipmentId,\n      name: this.state.newShipmentName,\n      items: []\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.push(shipment);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  //deteting shipment\n  deleteShipment = async event => {\n    const shipmentId = this.state.openedShipmentId;\n    try {\n      await axios.delete(\n        `https://api.shipments.test-y-sbm.com/shipment/${shipmentId}`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.deleteShipmentFromState();\n    } catch (e) {\n      alert(\"Deleting shipment failed\");\n    }\n  };\n  deleteShipmentFromState = () => {\n    const shipmentId = this.state.openedShipmentId;\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray.filter(item => item.id !== shipmentId);\n    this.setState({\n      shipments: newArray\n    });\n  };\n  //function that adds input value from a add item section\n  addNewItemName = e => {\n    this.setState({ newItemName: e.target.value });\n  };\n  //adding Item\n  addItem = async event => {\n    try {\n      await axios.post(\n        `https://api.shipments.test-y-sbm.com/item`,\n        {\n          id: this.state.newItemId,\n          code: this.state.newItemName,\n          shipment_id: this.state.openedShipmentId,\n          name: this.state.openedShipmentName\n        },\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      this.addItemToState();\n      newItemId(this);\n      clearItemInput(this);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  addItemToState = () => {\n    const item = {\n      id: this.state.newItemId,\n      code: this.state.newItemName,\n      shipment_id: this.state.openedShipmentId\n    };\n    const currentArray = [...this.state.shipments];\n    const newArray = currentArray;\n    newArray.map(shipment => {\n      if (shipment.id === this.state.openedShipmentId) {\n        return shipment.items.push(item);\n      }\n    });\n    this.setState({\n      shipments: newArray\n    });\n  };\n  //deteting item\n  deleteItem = async e => {\n    try {\n      await axios.delete(`https://api.shipments.test-y-sbm.com/item/${e.id}`, {\n        headers: {\n          Authorization: `bearer ${localStorage.token}`\n        }\n      });\n      this.deleteItemFromState(e);\n    } catch (e) {\n      alert(\"Deleting item failed\");\n    }\n  };\n\n  deleteItemFromState = item => {\n    const shipmentId = item.shipment_id;\n    const itemId = item.id;\n    const currentArray = [...this.state.shipments];\n    const newArray = [];\n    currentArray.map(shipment => {\n      if (shipment.id === shipmentId) {\n        const Shipment = shipment;\n        const shipItems = shipment.items;\n        const newItems = shipItems.filter(item => item.id !== itemId);\n        Shipment.items = newItems;\n        newArray.push(Shipment);\n      } else {\n        newArray.push(shipment);\n      }\n    });\n    this.setState({ shipments: newArray });\n  };\n  //downloading all shipments\n  async componentDidMount() {\n    newShipmentId(this);\n    newItemId(this);\n    try {\n      const data = await axios.get(\n        `https://api.shipments.test-y-sbm.com/shipment`,\n        {\n          headers: {\n            Authorization: `bearer ${localStorage.token}`\n          }\n        }\n      );\n      const list = data.data.data.shipments;\n      this.setState({\n        shipments: list\n      });\n    } catch (e) {\n      alert(\"Failed to load Shipments\");\n      this.props.props.history.push(\"/login\");\n      localStorage.clear();\n    }\n  }\n  render() {\n    return (\n      <>\n        <aside className=\"main-sidebar\">\n          <section className=\"sidebar\">\n            <ul className=\"sidebar-menu\" data-widget=\"tree\">\n              <li className=\"header\">LIST OF SHIPMENTS</li>\n              {/* displaying shipments  */}\n              <NewShipmentCard onClick={this.showNewShipment} />\n              {this.state.shipments.map(shipment => (\n                <ShipmentCard\n                  shipment={shipment}\n                  id={shipment.id}\n                  name={shipment.name}\n                  removeShipmentFromState={this.removeShipmentFromState}\n                  key={shipment.id}\n                  onClick={() => this.showShipment(shipment)}\n                />\n              ))}\n\n              {/* <Charts /> */}\n            </ul>\n          </section>\n        </aside>\n        {/* displaying items  */}\n        <div className=\"content-wrapper\" style={{ minHeight: \"901px\" }}>\n          {this.state.shipments.map(shipment => {\n            if (\n              shipment.id === this.state.openedShipmentId &&\n              this.state.isShipmentOpen\n            ) {\n              return (\n                <Shipment\n                  //name={item.name}\n                  nameSHIP={shipment.name}\n                  onChange={e => this.addNewItemName(e)}\n                  onClick={this.addItem}\n                  value={this.state.newItemName}\n                  key={shipment.id}\n                  listOfItems={shipment.items.map(item => {\n                    return (\n                      <Item\n                        itemName={item.code}\n                        key={item.id}\n                        deleteItem={() => {\n                          this.deleteItem(item);\n                        }}\n                      />\n                    );\n                  })}\n                  deleteShipment={e => this.deleteShipment(e)}\n                />\n              );\n            }\n          })}\n          {this.state.isNewShipmentOpen && (\n            <NewShipmentInput\n              onChange={e => this.addNewShipmentName(e)}\n              buttonClick={this.addNewShipment}\n              value={this.state.newShipmentName}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ShipmentsAndItems;\n"]},"metadata":{},"sourceType":"module"}