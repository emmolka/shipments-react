{"ast":null,"code":"var _jsxFileName = \"/home/master/ProjectBootstrap/test_task/src/App.js\";\nimport React from \"react\";\nimport Login from \"./Components/Login\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./Components/Main\";\nimport { Route, Redirect } from \"react-router\";\nimport \"./bower_components/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./bower_components/font-awesome/css/font-awesome.min.css\";\nimport \"./bower_components/Ionicons/css/ionicons.min.css\";\n\nconst checkLogIn = () => !!window.localStorage.getItem(\"token\");\n\nfunction App() {\n  let isLoggedIn = checkLogIn();\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => isLoggedIn ? React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/main\",\n    render: props => React.createElement(Main, Object.assign({}, props, {\n      isLoggedIn: checkLogIn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/master/ProjectBootstrap/test_task/src/App.js"],"names":["React","Login","BrowserRouter","Main","Route","Redirect","checkLogIn","window","localStorage","getItem","App","isLoggedIn","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAO,yDAAP;AACA,OAAO,0DAAP;AACA,OAAO,kDAAP;;AACA,MAAMC,UAAU,GAAG,MAAM,CAAC,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAA3B;;AAEA,SAASC,GAAT,GAAe;AACb,MAAIC,UAAU,GAAGL,UAAU,EAA3B;AAEA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,MAAM,EAAE,MACNK,UAAU,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA6B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,MAAM,EAAEW,KAAK,IAAI,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,MAAA,UAAU,EAAEN,UAAU,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAiBD;;AAED,eAAeI,GAAf","sourcesContent":["import React from \"react\";\nimport Login from \"./Components/Login\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./Components/Main\";\nimport { Route, Redirect } from \"react-router\";\nimport \"./bower_components/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./bower_components/font-awesome/css/font-awesome.min.css\";\nimport \"./bower_components/Ionicons/css/ionicons.min.css\";\nconst checkLogIn = () => !!window.localStorage.getItem(\"token\");\n\nfunction App() {\n  let isLoggedIn = checkLogIn();\n\n  return (\n    <BrowserRouter>\n      <Route\n        exact\n        path=\"/\"\n        render={() =>\n          isLoggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/login\" />\n        }\n      />\n\n      <Route path=\"/login\" component={Login} />\n      <Route\n        path=\"/main\"\n        render={props => <Main {...props} isLoggedIn={checkLogIn()} />}\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}